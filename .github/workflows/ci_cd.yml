# # name: MEAN CI/CD Pipeline

# # on:
# #   push:
# #     branches: [ main ]
# #   pull_request:
# #     branches: [ main ]

# # jobs:
# #   test_backend:
# #     runs-on: ubuntu-latest

# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v3

# #       - name: Set up Node.js
# #         uses: actions/setup-node@v3
# #         with:
# #           node-version: 18

# #       - name: Install backend dependencies
# #         working-directory: ./backend
# #         run: npm install

# #       - name: Run backend tests (if any)
# #         working-directory: ./backend
# #         run: npm test || echo "No tests found, skipping"

# #   build_and_push_docker:
# #     runs-on: ubuntu-latest
# #     needs: test_backend
# #     if: github.ref == 'refs/heads/main'

# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v3

# #       - name: Log in to Docker Hub
# #         uses: docker/login-action@v2
# #         with:
# #           username: ${{ secrets.DOCKERHUB_USERNAME }}
# #           password: ${{ secrets.DOCKERHUB_PASSWORD }}

# #       - name: Build and push backend Docker image
# #         run: |
# #           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest ./backend
# #           docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

# #       - name: Build and push frontend Docker image
# #         run: |
# #           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest ./frontend
# #           docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

      
# name: MEAN CI/CD Pipeline

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   test_backend:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       - name: Install backend dependencies
#         working-directory: ./backend
#         run: npm install

#       - name: Run backend tests (if any)
#         working-directory: ./backend
#         run: npm test || echo "No tests found, skipping"

#   test_frontend:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       - name: Install frontend dependencies
#         working-directory: ./frontend
#         run: npm install

#       - name: Run frontend tests (if any)
#         working-directory: ./frontend
#         run: npm test || echo "No tests found, skipping"

#       # Optional: Run Angular build to catch build errors
#       - name: Build frontend (test build only)
#         working-directory: ./frontend
#         run: npm run build --if-present

#   build_and_push_docker:
#     runs-on: ubuntu-latest
#     needs: [test_backend, test_frontend]   # âœ… depend on both tests
#     if: github.ref == 'refs/heads/main'

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}

#       - name: Build and push backend Docker image
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest ./backend
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

#       - name: Build and push frontend Docker image
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest ./frontend
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest



# name: CI/CD Pipeline

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     services:
#       mongo:
#         image: mongo:6.0
#         ports:
#           - 27017:27017

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       # Backend
#       - name: Install backend dependencies
#         run: |
#           cd backend
#           npm install

#       - name: Run backend tests
#         run: |
#           cd backend
#           npm test --if-present

#       # Frontend
#       - name: Install frontend dependencies
#         run: |
#           cd frontend
#           npm install

#       - name: Build frontend
#         run: |
#           cd frontend
#           npm run build --if-present

#   docker:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Log in to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and push Docker images
#         run: |
#           docker-compose build
#           docker-compose push


name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push backend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest ./backend
          docker push ${{ secrets.DOCKERHUB_PASSWORD }}/backend:latest

      - name: Build and push frontend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest ./frontend
          docker push ${{ secrets.DOCKERHUB_PASSWORD }}/frontend:latest
